@model List<(string Name, string SasUrl)>

<h2 class="text-center mt-4">Prayer Cards</h2>

<div class="container mt-3">
    @if (Model != null && Model.Any())
    {
        <div class="row">
            @foreach (var image in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card shadow-sm">
                        <div class="card-header text-center">
                            <h5 class="card-title">Image: @image.Name</h5>
                        </div>
                        <div class="card-body">
                            <a href="javascript:void(0);" onclick="openPopup('@image.SasUrl');">
                                <img src="@image.SasUrl" alt="Uploaded Image" class="img-fluid" />
                            </a>
                            <button class="btn btn-primary mt-2" onclick="analyzeImage('@image.SasUrl', '@image.Name');">Analyze</button>
                            <div id="analysis-@image.Name.Replace(" ", "-")" class="mt-2"></div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p>No Prayer Cards have been upload yet this week. If there are Pray Cards for you, they will be uploaded here late Sunday or the Monday after Friday night youth group has been on.</p>
    }
</div>

<style>
    .card {
        transition: all 0.3s ease-in-out;
    }

    .card:hover {
        transform: translateY(-5px); /* Slight upward movement on hover */
        box-shadow: 0 12px 20px rgba(0, 0, 0, 0.1); /* Enhanced shadow effect */
    }

    .card-header {
        padding: 0.8rem; /* Reduced padding for a smaller header */
        border-bottom: 2px solid #f1f1f1; /* Subtle border under the header */
        background-color: #A0B5A3 !important;
    }

    .card-title {
        font-size: 0.8rem; /* Smaller font size for the title */
        font-weight: bold; /* Bold title */
    }

    .card-body {
        padding: 1.25rem; /* Adds more padding inside the card body */
    }

    .text-muted {
        color: #A0B5A3 !important; /* Subtle muted color */
    }
</style>

<script>
    function openPopup(url) {
        var newWindow = window.open('', 'popup', 'width=800,height=600,scrollbars=yes');
        newWindow.document.write('<img src="' + url + '" style="width:100%;height:auto;" />');
    }

    async function analyzeImage(imageUrl, imageName) {
        try {
            const response = await fetch(`/PrayerCardExcel/AnalyzeImage?imageUrl=${encodeURIComponent(imageUrl)}&imageName=${encodeURIComponent(imageName)}`);
            if (response.ok) {
                const result = await response.json(); // Parse the JSON response
                const analysisDiv = document.getElementById(`analysis-${imageName.replace(" ", "-")}`);
                analysisDiv.innerHTML = ""; // Clear previous content

                if (result && !result.error) {
                    const sentiment = result.Sentiment; // Changed to Pascal case
                    const prayerSuggestion = result.PrayerSuggestion; // Changed to Pascal case
                    const reasoning = result.Reasoning; // Changed to Pascal case

                    // Create and append HTML elements for each field
                    analysisDiv.innerHTML = `
                    <div class="analysis-section">
                        <strong>Sentiment:</strong> ${sentiment}
                    </div>
                    <div class="analysis-section">
                        <strong>Prayer Suggestion:</strong> ${prayerSuggestion}
                    </div>
                    <div class="analysis-section">
                        <strong>Reasoning:</strong> ${reasoning}
                    </div>
                `;
                } else {
                    analysisDiv.innerHTML = `<p>${result.error || "Analysis failed or returned invalid data."}</p>`;
                }
            } else {
                document.getElementById(`analysis-${imageName.replace(" ", "-")}`).innerHTML = "<p>Error analyzing image.</p>";
            }
        } catch (error) {
            console.error("Error analyzing image:", error);
            document.getElementById(`analysis-${imageName.replace(" ", "-")}`).innerHTML = "<p>Error analyzing image.</p>";
        }
    }
</script>